{"version":3,"sources":["index.js"],"names":["App","useState","search","setSearch","allResult","setAllResult","result","setResult","weather","setWeather","weatherImg","setWeatherImg","useEffect","axios","get","then","response","data","Board","text","value","List","items","length","name","capital","population","languages","map","language","key","src","alt","height","width","i","alpha3Code","onClick","item","toLowerCase","filter","country","startsWith","onChange","event","console","log","target","curSearch","remainingResult","city","api_call","process","encodeURI","getWeather","ReactDOM","render","document","getElementById"],"mappings":"oNAOMA,EAAM,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACTC,EADS,KACDC,EADC,OAEkBF,mBAAS,IAF3B,mBAETG,EAFS,KAEEC,EAFF,OAGYJ,mBAAS,IAHrB,mBAGTK,EAHS,KAGDC,EAHC,OAIcN,mBAAS,IAJvB,mBAITO,EAJS,KAIAC,EAJA,OAKoBR,mBAAS,IAL7B,mBAKTS,EALS,KAKGC,EALH,KAehBC,qBAR0B,WACxBC,IAAMC,IAAI,wCACJC,MAAK,SAAAC,GAEJX,EAAaW,EAASC,WAIF,IAG7B,IAwCMC,EAAQ,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACpB,OACE,6BACE,2BAAID,EAAMC,KAOVC,EAAO,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACb,MAAc,KAAVA,EACM,4BAEgB,IAAjBA,EAAMC,OAEX,6BACE,4BAAKD,EAAM,GAAGE,MACd,uCAAaF,EAAM,GAAGG,SACtB,0CAAgBH,EAAM,GAAGI,YACzB,yCACCJ,EAAM,GAAGK,UAAUC,KAAI,SAAAC,GAAQ,OAC7B,wBAAIC,IAAKD,EAAQ,UAChB,2BAAIA,EAAQ,MADb,IAEGA,EAAQ,WAFX,QAKH,6BACA,yBAAKE,IAAKT,EAAM,GAAN,KAAkBU,IAAI,OAAOC,OAAO,MAAMC,MAAM,QAC1D,oDACA,2BAAI1B,GACJ,yBAAKuB,IAAKrB,EAAYsB,IAAI,OAAOC,OAAO,MAAMC,MAAM,SAIjDZ,EAAMC,OAAS,GACd,2CAIN,6BACGD,EAAMM,KAAI,SAAAO,GAAC,OAAK,wBAAIL,IAAKK,EAAEC,YACTD,EAAEX,KACH,4BAAQa,QAAS,kBAjDjBC,EAiDuCH,EAAEX,KAhDjErB,EAAUmC,EAAKC,oBACfhC,EAAUH,EAAUoC,QAAO,SAAAC,GAAO,OAC/BA,EAAO,KAASF,cAAcG,WAAWJ,EAAKC,mBAH1B,IAACD,IAiDA,cAW1B,OACE,6BACE,gDAGE,2BAAOlB,MAAOlB,EAAQyC,SArFD,SAACC,GAC1BC,QAAQC,IAAI,gBAAiBF,EAAMG,OAAO3B,OAC1CjB,EAAUyC,EAAMG,OAAO3B,MAAMmB,eAC7B,IAAIS,EAAYJ,EAAMG,OAAO3B,MAAMmB,cAC/BU,EAAkB7C,EAAUoC,QAAO,SAAAC,GAAO,OAC3CA,EAAO,KAASF,cAAcG,WAAWM,MAC5CzC,EAAU0C,GACqB,IAA3BA,EAAgB1B,QApBH,SAAC2B,GAClB,IAAIC,EAAQ,yDAFEC,mCAEF,kBAAsEF,GAClFL,QAAQC,IAAI,UAAWK,GACvBtC,IAAMC,IAAIuC,UAAUF,IACfpC,MAAK,SAAAC,GACJ6B,QAAQC,IAAI9B,EAASC,MACrB4B,QAAQC,IAAI9B,EAASC,KAAT,6BAAiD,IAC7DR,EAAWO,EAASC,KAAT,6BAAiD,IAC5DN,EAAcK,EAASC,KAAT,sBAA0C,OAa5DqC,CAAWL,EAAgB,GAAGxB,aAgF9B,kBAACP,EAAD,CAAOC,KAAM,uBAAwBC,MAAkB,KAAXlB,EAAc,EAAEI,EAAOiB,SACnE,kBAACL,EAAD,CAAOE,MAAOlB,IACd,kBAACmB,EAAD,CAAMC,MAAOhB,MAKnBiD,IAASC,OACL,kBAACxD,EAAD,MACFyD,SAASC,eAAe,W","file":"static/js/main.bf944856.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios'\n\n\n\n\nconst App = () => {\n  const [search, setSearch] = useState('')\n  const [allResult, setAllResult] = useState('')\n  const [result, setResult] = useState('')\n  const [weather, setWeather] = useState('')\n  const [weatherImg, setWeatherImg] = useState('')\n  \n  const downloadAllResult = () => {\n    axios.get(\"https://restcountries.eu/rest/v2/all\")\n         .then(response => {\n          //  console.log(response.data.map(country => (country['name'].toLowerCase())))\n           setAllResult(response.data)\n         })\n  }\n\n  useEffect(downloadAllResult, [])\n\n  \n  const api_key = process.env.REACT_APP_API_KEY\n  const getWeather = (city) => {\n    let api_call = `http://api.weatherstack.com/current?access_key=${api_key}&query=${city}`\n    console.log('apicall', api_call)\n    axios.get(encodeURI(api_call))\n        .then(response => {\n          console.log(response.data)\n          console.log(response.data['current'][\"weather_descriptions\"][0])\n          setWeather(response.data['current'][\"weather_descriptions\"][0])\n          setWeatherImg(response.data['current']['weather_icons'][0])\n          }\n        )\n  }\n\n  const handleSearchChange = (event) => {\n    console.log('search change', event.target.value)\n    setSearch(event.target.value.toLowerCase())\n    let curSearch = event.target.value.toLowerCase()\n    let remainingResult = allResult.filter(country => \n      (country['name'].toLowerCase().startsWith(curSearch)))\n    setResult(remainingResult)\n    if (remainingResult.length === 1) {\n      getWeather(remainingResult[0].capital)\n    }\n  }\n\n  // const handleSearchSubmit = (event) => {\n  //   event.preventDefault()\n  //   const remainingResult = allResult.filter(country => \n  //     (country['name'].toLowerCase().startsWith(search)))\n  //   console.log('from submit', search, remainingResult)\n  // }\n  \n\n  const handleShowButton = (item) => {\n    setSearch(item.toLowerCase())\n    setResult(allResult.filter(country => \n      (country['name'].toLowerCase().startsWith(item.toLowerCase()))))\n  }\n\n  const Board = ({text, value}) => {\n    return (\n      <div>\n        <p>{text}{value}</p>\n      </div>\n\n    )\n  }\n\n\n  const List = ({items}) => {\n    if (items === '') {\n      return (\"Please Type Country Name!\")\n    }\n    else if (items.length === 1) {\n      return (\n        <div>\n          <h1>{items[0].name}</h1>\n          <p>Capital: {items[0].capital}</p>\n          <p>Population: {items[0].population}</p>\n          <h2>Languages</h2>\n          {items[0].languages.map(language => \n            (<li key={language['iso639_2']}>\n              <b>{language['name']}</b>\n              ({language['nativeName']})</li>)\n              )\n          }\n          <br/>\n          <img src={items[0]['flag']} alt=\"Flag\" height='20%' width='20%'></img>\n          <h2>weather_descriptions</h2>\n          <p>{weather}</p>\n          <img src={weatherImg} alt=\"Flag\" height='20%' width='20%'></img>\n        </div>\n      )\n    }\n    else if (items.length > 10) {\n      return (\"Too many matches, specify another filter\")\n    }\n    else {\n      return (\n        <div>\n          {items.map(i => (<li key={i.alpha3Code}>\n                            {i.name}\n                            <button onClick={()=> handleShowButton(i.name)}>show</button>\n                          </li>))}\n          \n        </div>\n      )\n    }\n  }\n\n\n\n\n  return (\n    <div>\n      <form>\n      {/* <form onSubmit={handleSearchSubmit}> */}\n        find countrieas   \n        <input value={search} onChange={handleSearchChange}/>\n        {/* <button type='submit'>Search</button> */}\n      </form>\n      <Board text={\"Number of Matches:  \"} value={search === ''?0:result.length}/>\n      <Board value={search}/>\n      <List items={result}/>\n    </div>\n  )\n}\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}